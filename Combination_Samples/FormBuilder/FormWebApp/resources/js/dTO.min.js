Bridge.define("DTO.Form",{config:{properties:{Fields:null}},constructor:function(){this.setFields(new Bridge.List$1(DTO.FormField)())},constructor$1:function(n){var i,t;for(this.$constructor(),i=n.Fields,$t=Bridge.getEnumerator(i);$t.moveNext();)t=$t.getCurrent(),t.Kind===Bridge.cast(DTO.FormFieldType.radio,Bridge.Int)?this.getFields().add(Bridge.merge(new DTO.RadioFormField,{setId:t.Id,setLabel:t.Label,setOptions:t.Options})):this.getFields().add(Bridge.merge(new DTO.TextFormField,{setId:t.Id,setLabel:t.Label,setRequired:t.Required}))}});Bridge.define("DTO.FormField",{config:{properties:{Kind:0,Id:null,Label:null}}});Bridge.define("DTO.FormFieldType",{statics:{text:0,radio:1}});Bridge.define("DTO.RadioFormField",{inherits:[DTO.FormField],config:{properties:{Options:null}},constructor:function(){DTO.FormField.prototype.$constructor.call(this);this.setKind(DTO.FormFieldType.radio)}});Bridge.define("DTO.TextFormField",{inherits:[DTO.FormField],config:{properties:{Required:!1}},constructor:function(){DTO.FormField.prototype.$constructor.call(this);this.setKind(DTO.FormFieldType.text);this.setRequired(!1)}})